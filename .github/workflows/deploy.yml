name: Deploy
on:
  push:
    branches:
    - main
permissions:
  contents: read

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install Task
      uses: arduino/setup-task@v1
    - name: test
      run: task frontend:ci

  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.18'
    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Test
      run: task backend:ci

  deploy:
    concurrency: deploy
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.18'
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy
      run: |
        aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID" --profile music-rating
        aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" --profile music-rating
        DOMAIN_NAME="$DOMAIN_NAME" CLIENT_ID="$CLIENT_ID" CLIENT_SECRET="$CLIENT_SECRET" SESSION_SECRET="$SESSION_SECRET" task deploy
      env:
        DOMAIN_NAME: ${{secrets.DOMAIN_NAME}}
        CLIENT_ID: ${{secrets.CLIENT_ID}}
        CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
        SESSION_SECRET: ${{secrets.SESSION_SECRET}}
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_DEFAULT_REGION: eu-west-1
