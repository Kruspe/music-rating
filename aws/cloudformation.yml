AWSTemplateFormatVersion: 2010-09-09
Description: MusicRating resources

Parameters:
  ParamBackendVersion:
    Type: String

Resources:
  API:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MusicRating
      Target: !GetAtt [ Lambda, Arn ]
      ProtocolType: HTTP

  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableName: MusicRating

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - 'dynamodb:DeleteItem'
            - 'dynamodb:GetItem'
            - 'dynamodb:PutItem'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
            - 'dynamodb:UpdateItem'
            Resource: !GetAtt [ Table, Arn ]
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: music-rating-deployment-bucket
        S3Key: bootstrap.zip
        S3ObjectVersion: !Ref ParamBackendVersion
      Handler: bootstrap
      Role: !GetAtt [ LambdaRole, Arn ]
      Runtime: provided.al2
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/$default/$default
      FunctionName: !Ref Lambda

#  UserPool:
#    Type: AWS::Cognito::UserPool
#    Properties:
#      AccountRecoverySetting:
#        RecoveryMechanisms:
#        - Name: verified_email
#          Priority: 1
#        - Name: admin_only
#          Priority: 2
#      AliasAttributes:
#      - preferred_username
#      - email
#      Schema:
#      - AttributeDataType: String
#        Mutable: true
#        Name: preferred_username
#        Required: true
#      - AttributeDataType: String
#        Mutable: true
#        Name: email
#        Required: true
#      UserPoolName: MusicRating


